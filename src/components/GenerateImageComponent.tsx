import React, { useState } from 'react';
import { IonBackButton, IonButtons, IonHeader, IonContent, IonToolbar, IonTitle, IonCard, IonCardHeader, IonIcon, IonCardContent, IonButton, IonTextarea, IonLabel, IonItem, useIonToast, IonLoading } from '@ionic/react';
import { save } from 'ionicons/icons';
import { Configuration, OpenAIApi } from 'openai';

function GenerateImageComponent() {
    const [presentToast] = useIonToast();
    const [prompt, setPrompt] = useState("");
    const [result, setResult] = useState("assets/icon/openai.png");
    const [showLoading, setShowLoading] = useState(false);
    const configuration = new Configuration({
        apiKey: localStorage.getItem('apikey')!,
    });

    const showToast = (message: string) => {
      presentToast({
        message: message,
        duration: 3000,
        position: 'bottom'
      });
    };

    const openai = new OpenAIApi(configuration);

    const generateImage = async () => {
      try{
        setShowLoading(true);
        const res = await openai.createImage({
            prompt: prompt,
            n: 1,
            size: "512x512",
        });
        setResult(res.data.data[0].url!);
        setShowLoading(false);
      }catch(error: any){
        if (error.response) {
          console.log(error.response.status);
          console.log(error.response.data);
          showToast(error.response.data.error.message);
        } else {
          showToast(error.message);
        }
      }      
      setShowLoading(false);
    };

    const downloadImage = () => {
        const link = document.createElement('a');
        link.href = result;
        link.download = 'result.png';
        link.click();
    };

  return (
    <>
      <IonHeader>
        <IonToolbar>
          <IonButtons slot="start">
            <IonBackButton></IonBackButton>
          </IonButtons>
          <IonTitle>Generate Image</IonTitle>
        </IonToolbar>
      </IonHeader>
      <IonContent class="ion-padding">
        <div className="container">
          <div className="content-center">          
              <IonCard>
                <IonCardHeader>
                  <h4>Generated By OpenAI:</h4> 
                </IonCardHeader>
                <IonCardContent>
                  <img id="myImage" className="result-image" src={result} alt="result" />
                  <IonButton onClick={downloadImage}><IonIcon icon={save}></IonIcon></IonButton>
                </IonCardContent>
                <IonItem>
                  <IonLabel position="floating">Write down here to generate image:</IonLabel>
                  <IonTextarea placeholder="Type something here" autoGrow onIonChange={(e) => setPrompt(e.detail.value!)}></IonTextarea>
                </IonItem>                    
              </IonCard>
              <IonButton shape="round" class="card-btn" onClick={generateImage}>Generate Image</IonButton>
          </div>
        </div>
        <IonLoading
          cssClass="my-custom-class"
          isOpen={showLoading}
          onDidDismiss={() => setShowLoading(false)}
          message={'Generating Image...'}
        />
      </IonContent>
    </>
  );
}

export default GenerateImageComponent;